apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

android {
    compileSdkVersion rootProject.ext.COMPILE_SDK_VERSION
    buildToolsVersion rootProject.ext.BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.nurdcoder.bcsquestionbank"
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.TARGET_SDK_VERSION
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME

        multiDexEnabled true
        renderscriptTargetApi rootProject.ext.RENDER_SCRIPT_TARGET_API
        renderscriptSupportModeEnabled true
        setProperty("archivesBaseName", "BCSQuestionBank-$versionName")

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'nurdcoder'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotesFilePath = file('../crashlytics_release_notes.txt').absolutePath
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    useLibrary 'org.apache.http.legacy'

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    packagingOptions {
        pickFirst 'protobuf.meta'

//        exclude 'org/apache/http/version.properties'
//        exclude 'org/apache/http/client/version.properties'

        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/INDEX.LIST"
        exclude "META-INF/io.netty.versions.properties"
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE.txt'
        exclude 'project.properties'
        exclude 'META-INF/project.properties'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        warning 'InvalidPackage'
        checkReleaseBuilds false
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:$rootProject.SUPPORT_LIBRARY_VERSION"
        resolutionStrategy.force "com.google.code.findbugs:jsr305:1.3.9"
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }

    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:recyclerview-v7:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:cardview-v7:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:design:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-annotations:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:support-vector-drawable:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:animated-vector-drawable:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support:percent:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.CONSTRAINT_LAYOUT_VERSION"
    implementation "com.android.support:multidex:1.0.3"
    implementation "com.android.support:exifinterface:$rootProject.SUPPORT_LIBRARY_VERSION"
    implementation "com.android.support.test:rules:1.0.2"
    implementation "com.android.support.test.espresso:espresso-core:3.0.2"
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support.test:runner:$rootProject.RUNNER_VERSION"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$rootProject.LIFECYCLE_VERSION"

    // Test helpers for Room
    testImplementation "android.arch.persistence.room:testing:$rootProject.LIFECYCLE_VERSION"
    
    def mockito = "org.mockito:mockito-core:$rootProject.MOCKITO_VERSION"
    // Unit tests dependencies
    testImplementation mockito
    testImplementation "org.hamcrest:hamcrest-core:$rootProject.HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.HAMCREST_VERSION"
    testImplementation "org.hamcrest:hamcrest-integration:$rootProject.HAMCREST_VERSION"
    testImplementation 'org.robolectric:robolectric:3.6.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'org.powermock:powermock-mockito-release-full:1.4.9'

    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test:runner:$rootProject.rootProject.RUNNER_VERSION"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.SUPPORT_LIBRARY_VERSION"
    androidTestImplementation mockito
    androidTestImplementation "org.mockito:mockito-android:$rootProject.MOCKITO_VERSION"

    androidTestImplementation "com.android.support.test:rules:$rootProject.RUNNER_VERSION"
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$rootProject.ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
}

dependencies {
    implementation "com.squareup.retrofit2:retrofit:$rootProject.RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.RETROFIT_VERSION"
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
}

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'org.apache.commons:commons-lang3:3.6'
}

dependencies {
    implementation "com.jakewharton:butterknife:$rootProject.BUTTERKNIFE_VERSION"
//    implementation "com.ryanharter.auto.value:auto-value-gson-runtime:$rootProject.AUTO_VALUE_GSON_VERSION"
    implementation "com.ryanharter.auto.value:auto-value-parcel-adapter:$rootProject.AUTO_VALUE_PARCEL_VERSION"
    compileOnly 'com.jakewharton.auto.value:auto-value-annotations:1.5'
    compileOnly "com.ryanharter.auto.value:auto-value-moshi-annotations:$rootProject.AUTO_VALUE_MOSHI_VERSION"
    implementation 'com.jakewharton.timber:timber:4.6.1'
}

dependencies {
    implementation 'com.mikhaellopez:circularimageview:3.0.2'
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.3'

    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation "com.parse:parse-android:$rootProject.PARSE_VERSION"
    implementation 'com.race604.waveloading:library:1.1.1'

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'com.mcxiaoke.volley:library:1.0.19'

    implementation 'info.androidhive:barcode-reader:1.1.5'
    implementation 'com.iarcuschin:simpleratingbar:0.1.5'

    // Bottom bar nav
    implementation "com.roughike:bottom-bar:2.2.0"

    implementation "jp.wasabeef:glide-transformations:2.0.1"
    implementation "com.makeramen:roundedimageview:2.3.0"
    implementation 'com.dewarder:holdingbutton:0.1.0'

    implementation 'com.patrickpissurno:ripple-effect:1.3.1'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    implementation 'com.thoughtbot:expandablecheckrecyclerview:1.4'

    //osmdroid map
    implementation "org.osmdroid:osmdroid-android:4.3"

//    implementation('com.crashlytics.sdk.android:crashlytics:2.5.7@aar') {
//        transitive = true
//    }

    //Calligraphy
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    // Dexter is an Android library that simplifies the process of requesting permissions at runtime.
    implementation 'com.karumi:dexter:4.1.0'

    // blur popup view
    implementation 'com.kyleduo.blurpopupwindow:blurpopupwindow:1.0.8'
    implementation 'kr.pe.burt.android.lib:androidgradientimageview:0.0.2'

    // expandable recyclerview
    implementation 'com.afollestad:sectioned-recyclerview:0.5.0' // recycler with header
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3'

    // A layout that you can swipe/slide to show another layout.
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.0'
    // expandable recycle
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'

    // ripple background
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.oguzdev:CircularFloatingActionMenu:1.0.2'
    implementation 'com.vistrav:ask:2.5'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'jp.wasabeef:blurry:2.1.1'
    implementation 'com.eightbitlab:blurview:1.3.4'
    implementation 'com.ogaclejapan.arclayout:library:1.1.0@aar'

    // Circular image view
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    // Image cropper library
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'

    //view animator
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'

    // Drawer behaviour
    implementation 'com.infideap.drawerbehavior:drawer-behavior:0.0.5'
    implementation 'com.mindorks.android:prdownloader:0.4.0'

    // Button circular progress
    implementation 'com.github.abdularis:androidbuttonprogress:v0.1-alpha5'
//    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'

    // Custom progress
    implementation 'me.zhanghai.android.materialprogressbar:library:1.4.2'
    implementation "com.tonyodev.fetch2:fetch2:2.1.0-RC15"
    implementation "com.tonyodev.fetch2okhttp:fetch2okhttp:2.2.0-RC13"
}

//Exclude
dependencies {
    implementation('com.google.apis:google-api-services-translate:v2-rev47-1.22.0') {
        exclude group: 'com.google.guava'
    }

    implementation('com.google.cloud:google-cloud-translate:0.5.0') {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
        exclude group: 'io.grpc', module: 'grpc-protobuf-lite'
        exclude group: 'io.grpc', module: 'grpc-all'
        exclude group: 'com.google.api-client', module: 'google-api-client-appengine'
    }

    implementation('com.google.api.grpc:grpc-google-cloud-speech-v1beta1:0.0.7') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
        exclude group: 'io.grpc', module: 'grpc-protobuf-nano'
        exclude group: 'io.grpc', module: 'grpc-protobuf-lite'
        exclude group: 'com.google.api-client', module: 'google-api-client-appengine'
        exclude group: "org.apache.httpcomponents", module: "httpclient"
    }
}

dependencies {
//    implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    implementation 'com.google.protobuf:protobuf-java:3.4.0'
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
    implementation 'com.google.android.gms:play-services-analytics:16.0.6'
    implementation 'com.google.android.gms:play-services-ads:17.1.2'
    implementation 'com.google.android.gms:play-services-safetynet:16.0.0'
    implementation 'com.google.android.gms:play-services-vision:17.0.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation "com.google.dagger:dagger:$rootProject.DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
}

dependencies {
    implementation "com.github.GrenderG:Toasty:1.3.0"
    implementation "com.github.bumptech.glide:glide:4.7.1"
    implementation 'com.github.daolq3012:AssetSQLiteOpenHelper:1.0'
    implementation 'com.github.rubensousa:gravitysnaphelper:1.5'
    //Notification
    implementation 'com.github.halysongoncalves:pugnotification:1.8.1'
    // view pager
    implementation 'com.github.vivchar:ViewPagerIndicator:1.1.0'
    // wheel view
    implementation 'com.github.lukedeighton:wheelview:0.4.1'
    // date format
    implementation 'com.github.thunder413:DateTimeUtils:1.0'
    implementation 'com.github.scijoker:spinner2:1.0.1'
    // circle layout
    implementation 'io.github.francoiscampbell:circlelayout:0.3.0'
    // Recyclerview pagination library
    implementation 'com.github.markomilos:paginate:0.5.1'
}

dependencies {
    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$rootProject.LIFECYCLE_VERSION"
    // alternatively, just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$rootProject.LIFECYCLE_VERSION"
    // alternatively, just LiveData
    implementation "android.arch.lifecycle:livedata:$rootProject.LIFECYCLE_VERSION"

    // Room (use 1.1.0-alpha1 for latest alpha)
    implementation "android.arch.persistence.room:runtime:$rootProject.LIFECYCLE_VERSION"

    // Paging
    implementation "android.arch.paging:runtime:1.0.1"

    // Java8 support for Lifecycles
    implementation "android.arch.lifecycle:common-java8:$rootProject.LIFECYCLE_VERSION"

    // Lifecycles only (no ViewModel or LiveData)
    implementation "android.arch.lifecycle:runtime:$rootProject.LIFECYCLE_VERSION"

    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
}

dependencies {  //annotationProcessor
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ROOM_VERSION"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.LIFECYCLE_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.DAGGER_VERSION"
    annotationProcessor "com.google.auto.value:auto-value:$rootProject.AUTO_VALUE_VERSION"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:$rootProject.AUTO_VALUE_PARCEL_VERSION"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$rootProject.AUTO_VALUE_GSON_VERSION"
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$rootProject.AUTO_VALUE_MOSHI_VERSION"
    annotationProcessor 'com.squareup:javapoet:1.9.0'
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.BUTTERKNIFE_VERSION"
    annotationProcessor "com.github.bumptech.glide:compiler:4.4.0"

    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.DAGGER_VERSION"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.DAGGER_VERSION"
}

dependencies {  //debug only
    debugImplementation "com.facebook.stetho:stetho:1.5.0"
    debugImplementation 'com.awesomedroidapps:inappstoragereader:1.0.2'
    //acra for crash reporting, temporay solution
    debugImplementation 'ch.acra:acra:4.9.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

dependencies {
    //noinspection GradleCompatible
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-auth:16.1.0'

    // https://mvnrepository.com/artifact/com.google.firebase/firebase-messaging
    implementation group: 'com.google.firebase', name: 'firebase-messaging', version: '17.3.4'
}

apply plugin: 'com.google.gms.google-services'
